linters-settings:
  dupl:
    threshold: 100
  funlen:
    lines: 100
    statements: 50
  gci:
    local-prefixes: github.com/golangci/golangci-lint
  goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - octalLiteral
      - whyNoLint
      - wrapperFunc
    settings:
      hugeParam:
        sizeThreshold: 256
  gocyclo:
    min-complexity: 15
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: [ argument,case,condition,return ]
  govet:
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Panicf
  lll:
    line-length: 140
  maligned:
    suggest-new: true
  misspell:
    locale: US
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped
linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - bidichk
    - bodyclose
    - contextcheck
    - deadcode
    - depguard
    - dogsled
    - dupl
    - durationcheck
    - errcheck
    - errorlint
    - exhaustive
    - exportloopref
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofumpt
    - goimports
    - gomnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - maintidx
    - makezero
    - misspell
    - nakedret
    - nilerr
    - noctx
    - nolintlint
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - structcheck
    - stylecheck
    - tenv
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - whitespace
  # don't enable:
  # - asciicheck
  # - containedctx
  # - cyclop
  # - decorder
  # - forbidgo
  # - forcetypeassert
  # - gci
  # - grouper
  # - gochecknoglobals
  # - gocognit
  # - godot
  # - godox
  # - goerr113
  # - gofmt
  # - goheader
  # - gomodguard
  # - ifshort
  # - importas
  # - ireturn
  # - maligned
  # - nestif
  # - nilnil
  # - nlreturn
  # - paralleltest
  # - prealloc
  # - predeclared
  # - promlinter
  # - tagliatelle
  # - testpackage
  # - thelper
  # - tparallel
  # - varnamelen - may be interesting but requires too much work for now
  # - wastedassign
  # - wsl
issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: test
      linters:
        - contextcheck
        - dupl
        - funlen
        - gochecknoinits
        - goconst
        - gomnd
        - gosec
        - maintidx

run:
  skip-dirs:
    - test/testdata_etc
# golangci.com configuration
# https://github.com/golangci/golangci/wiki/Configuration
service:
  golangci-lint-version: 1.46.0 # use the fixed version to not introduce new linters unexpectedly
  prepare:
    - echo "here I can run custom commands, but no preparation needed for this repo"
